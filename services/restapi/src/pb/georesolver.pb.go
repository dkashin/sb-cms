// Code generated by protoc-gen-go. DO NOT EDIT.
// source: georesolver.proto

package stabox

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetLocationReq struct {
	IpAddress            string   `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocationReq) Reset()         { *m = GetLocationReq{} }
func (m *GetLocationReq) String() string { return proto.CompactTextString(m) }
func (*GetLocationReq) ProtoMessage()    {}
func (*GetLocationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f40599477edb913, []int{0}
}

func (m *GetLocationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocationReq.Unmarshal(m, b)
}
func (m *GetLocationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocationReq.Marshal(b, m, deterministic)
}
func (m *GetLocationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocationReq.Merge(m, src)
}
func (m *GetLocationReq) XXX_Size() int {
	return xxx_messageInfo_GetLocationReq.Size(m)
}
func (m *GetLocationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocationReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocationReq proto.InternalMessageInfo

func (m *GetLocationReq) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

type GeoLocation struct {
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Gray                 bool     `protobuf:"varint,3,opt,name=gray,proto3" json:"gray,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeoLocation) Reset()         { *m = GeoLocation{} }
func (m *GeoLocation) String() string { return proto.CompactTextString(m) }
func (*GeoLocation) ProtoMessage()    {}
func (*GeoLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f40599477edb913, []int{1}
}

func (m *GeoLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeoLocation.Unmarshal(m, b)
}
func (m *GeoLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeoLocation.Marshal(b, m, deterministic)
}
func (m *GeoLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoLocation.Merge(m, src)
}
func (m *GeoLocation) XXX_Size() int {
	return xxx_messageInfo_GeoLocation.Size(m)
}
func (m *GeoLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoLocation.DiscardUnknown(m)
}

var xxx_messageInfo_GeoLocation proto.InternalMessageInfo

func (m *GeoLocation) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *GeoLocation) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *GeoLocation) GetGray() bool {
	if m != nil {
		return m.Gray
	}
	return false
}

func init() {
	proto.RegisterType((*GetLocationReq)(nil), "stabox.GetLocationReq")
	proto.RegisterType((*GeoLocation)(nil), "stabox.GeoLocation")
}

func init() { proto.RegisterFile("georesolver.proto", fileDescriptor_9f40599477edb913) }

var fileDescriptor_9f40599477edb913 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x4f, 0xcd, 0x2f,
	0x4a, 0x2d, 0xce, 0xcf, 0x29, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b,
	0x2e, 0x49, 0x4c, 0xca, 0xaf, 0x90, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c,
	0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xa8, 0x52,
	0xd2, 0xe7, 0xe2, 0x73, 0x4f, 0x2d, 0xf1, 0xc9, 0x4f, 0x06, 0x8b, 0x06, 0xa5, 0x16, 0x0a, 0xc9,
	0x72, 0x71, 0x65, 0x16, 0xc4, 0x27, 0xa6, 0xa4, 0x14, 0xa5, 0x16, 0x17, 0x4b, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0x71, 0x66, 0x16, 0x38, 0x42, 0x04, 0x94, 0xfc, 0xb9, 0xb8, 0xdd, 0x53, 0xf3,
	0x61, 0x1a, 0x84, 0x24, 0xb8, 0xd8, 0x93, 0xf3, 0x4b, 0xf3, 0x4a, 0x8a, 0x2a, 0xa1, 0x4a, 0x61,
	0x5c, 0x21, 0x21, 0x2e, 0x96, 0xe4, 0xcc, 0x92, 0x4a, 0x09, 0x26, 0xb0, 0x30, 0x98, 0x0d, 0x12,
	0x4b, 0x2f, 0x4a, 0xac, 0x94, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x08, 0x02, 0xb3, 0x8d, 0x4a, 0xc0,
	0x06, 0x06, 0x41, 0x1d, 0x2f, 0x94, 0x0a, 0xe2, 0xc2, 0x1d, 0x24, 0x24, 0xa6, 0x07, 0xf1, 0x86,
	0x1e, 0xaa, 0x2b, 0xa5, 0x84, 0x11, 0xe2, 0x70, 0xc7, 0x28, 0x69, 0x36, 0x5d, 0x7e, 0x32, 0x99,
	0x49, 0x59, 0x48, 0x51, 0x1f, 0xe1, 0x03, 0xfd, 0x6a, 0x04, 0xbb, 0x56, 0x3f, 0x07, 0xaa, 0x34,
	0x89, 0x0d, 0xec, 0x7d, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0x57, 0x19, 0x5a, 0x39,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeoResolverClient is the client API for GeoResolver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeoResolverClient interface {
	GetLocation(ctx context.Context, in *GetLocationReq, opts ...grpc.CallOption) (*GeoLocation, error)
}

type geoResolverClient struct {
	cc *grpc.ClientConn
}

func NewGeoResolverClient(cc *grpc.ClientConn) GeoResolverClient {
	return &geoResolverClient{cc}
}

func (c *geoResolverClient) GetLocation(ctx context.Context, in *GetLocationReq, opts ...grpc.CallOption) (*GeoLocation, error) {
	out := new(GeoLocation)
	err := c.cc.Invoke(ctx, "/stabox.GeoResolver/GetLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeoResolverServer is the server API for GeoResolver service.
type GeoResolverServer interface {
	GetLocation(context.Context, *GetLocationReq) (*GeoLocation, error)
}

// UnimplementedGeoResolverServer can be embedded to have forward compatible implementations.
type UnimplementedGeoResolverServer struct {
}

func (*UnimplementedGeoResolverServer) GetLocation(ctx context.Context, req *GetLocationReq) (*GeoLocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocation not implemented")
}

func RegisterGeoResolverServer(s *grpc.Server, srv GeoResolverServer) {
	s.RegisterService(&_GeoResolver_serviceDesc, srv)
}

func _GeoResolver_GetLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoResolverServer).GetLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stabox.GeoResolver/GetLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoResolverServer).GetLocation(ctx, req.(*GetLocationReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeoResolver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stabox.GeoResolver",
	HandlerType: (*GeoResolverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLocation",
			Handler:    _GeoResolver_GetLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "georesolver.proto",
}
